##################################################
## Gateway Service
##################################################

apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: default
spec:
  ports:
    - name: http
      port: 5000
      targetPort: gateway-port
    - name: https
      port: 443
      targetPort: webhook-port
    - name: admin
      port: 8080
      targetPort: admin-port
  selector:
    app: gateway
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-env-configmap
  namespace: default
data:
  APP_ENV: 'development'
  PORT: '5000'

  WEBHOOK_PORT: '8443'

  DISABLE_K8S_CLIENT: 'false'
  ENABLE_STACKDRIVER: 'false'

---
# Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccountName: api-gateway
      containers:
        - name: gateway
          image: registry.gitlab.com/isaiahwong/go/api/gateway
          imagePullPolicy: IfNotPresent
          ports:
            - name: gateway-port
              containerPort: 5000
            - name: webhook-port
              containerPort: 8443
            - name: admin-port
              containerPort: 8080

          envFrom:
            - configMapRef:
                name: gateway-env-configmap

          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /run/secrets/tls
              readOnly: true

          livenessProbe:
            httpGet:
              path: /hz
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 120

      volumes:
        - name: webhook-tls-certs
          secret:
            secretName: webhook-server-tls

      imagePullSecrets:
        - name: gitlab-auth

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway
  namespace: default
---
# Role
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: api-gateway
rules:
  - apiGroups: ['', 'extensions', 'apps']
    resources: ['services', 'namespaces']
    verbs: ['get', 'list']

---
# Role Binding
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  namespace: default
  name: api-gateway-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-gateway
  namespace: default
subjects:
  - kind: ServiceAccount
    name: api-gateway
    namespace: default

---
##################################################
## Gateway Webhook
##################################################

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: gateway-webhook
  namespace: default
webhooks:
  - name: gateway-service.default.svc
    clientConfig:
      service:
        name: gateway-service
        namespace: default
        path: '/webhook'
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJBQ0NRQ2I3M2lBa0QvN3ZEQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdG4KWVhSbGQyRjVMWE5sY25acFkyVXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1Ua3hNak14TVRRME1qTTJXaGNOTWpBdwpNVE13TVRRME1qTTJXakFtTVNRd0lnWURWUVFEREJ0bllYUmxkMkY1TFhObGNuWnBZMlV1WkdWbVlYVnNkQzV6CmRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdVMzcjgrdG9WdEpWc2UzMnEKNWg5U3dUY0g4WHBvU1k2Q1o1QnFCOG1mTnFMclJyTVcvTUYyLytlRzhQSUhiQ0w1QnlJdlFlclBEdzJGVDM2WQpKTlBOMmEzT1g2eTZwV3dpYkc0SGlOdWJVOVgwTEh5NWdUOUZQOTU3Mi9DSjVCU0toMThWMmVXYzdIS1ljOUFIClhZTk1FRExEUjNUZ05VKzVCeDNydW1sN05KWGpoVW5rV0UvakJlYmRpLzZHci9udk45ZThVcWhNV2NHcmdTL04KN2liekkrMlc4ZGtQYnRKUmdvSFluTUYxNnBHSnd1ckdQSk5OWDBSY3hWRHVLL0RjRi9CdGljWmRkakdOUFlrbApIR21lRW9qT1BDVnkyWjNXanh4RFVYSStnLysyY2dvRG9ySzRFMWwrMHF6SXB5U293Vm05MFZ3TDFJVWNZWGxPCnBBTGhBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLQ2FqMWpXaFNpOWRsTS9xTUlCUWNoTDJsK2YKWE1BM3VIMkhoOThscncydVpsd2kxanRRQktxem9QS2RvYm0rQmZKUlRqMnZiZHN5SC9WT0g5d3R4NEVyWWxBNwpxRWtuQnZBV0dzcTlTVmgzcXlrb3Z2dUdYdnZsOTUwZ0syT0N5eUVXaEMvWHRZL3dTeWFndHpIZDJteEdFZnhaCm81TnJKNkR2SXRzOVk5QVdnU0s2R2VXc3g5UVQ0amk2dDVETzJsaHJ2Ry8zNU1XKzNldS9MZm42U2Jhc3VBRXcKUFZ0d1VhVzI4b000MGtnNlM0NnJXMXhYYW1rN0xEcEFpdmRvL1ZjTWt2UEpYRnhmN0JQT2VYQW5pbjZYT0JwTApzRk5PRlQxclhrWlNUWkZVUU0wanFGVDNOdVFnaVRRYmZ0NG1PTVlYVDJwYlFJRExrUmFyRnRzV2NDTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    rules:
      - operations: ['*']
        apiGroups: ['*']
        apiVersions: ['*']
        resources: ['services']

---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJBQ0NRRDRqM2czN29iTE9UQU5CZ2txaGtpRzl3MEJBUVVGQURBbU1TUXdJZ1lEVlFRRERCdG4KWVhSbGQyRjVMWE5sY25acFkyVXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1Ua3hNak14TVRRME1qTTNXaGNOTWpBdwpNVE13TVRRME1qTTNXakFtTVNRd0lnWURWUVFEREJ0bllYUmxkMkY1TFhObGNuWnBZMlV1WkdWbVlYVnNkQzV6CmRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDOWVHSEdrVlZrZnlmQ3JLSEgKQW5UUExhVjdweS9BYzZXdkRBOVora2lMTXd1cjQ3T0I2bkV1TEcwb2gzY1RlU01BTFB2ckZ6emdLZlF4VndFbwpWdllWVTVhTE4ydWczb25VMDY2WEtXOFZlSHBkb1ZGVG5rSDBUNUhhemJVbVlEc3N3OE1tYWsxKzdERmYyQm43CnozVy84RWtDcW02aHNrQ2U5WmdCcG1WaVRVYkFmQlpDYzZUbHBDa1BRM1BLZ2lRUjkvSUEzeVFyRlFkYUx2U1UKdnRVM2E3dHJ2SmpmQmNvVWc0Q3cxcGdkOEczci9yNEhQMUtrN0plR05BM3ljSmZZTi85NDBmKy9UeXRVc0t2ZApnc2JsR3g5VUFrOFlNeCtPWW52QUowdXpacXJIWXVwekYrWFFlaEZ5UGpWdXNaMk5zeUo2STk1clNmRlJqODBnClVFYkhBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUZCUUFEZ2dFQkFGQkVKRGkwMWIrYzhuSW10K0tXVk5EdENLazIKb3JMbkkzSEJuS3VxTmNLUDRzOENtbTdwMGI5Rm9ncDFpOElXckxERzdSS0dXRk9XWHdhQzBhOERWVDlJL0pkcApWbU9saFpGUkM0WWsrMnluQ081YS9VQWNLbGw2UE14YWMxVmdoM0RXK2g1MzYrMWRTTEdhVk1Cbm9rby9WaXJaCnIxZUNWdlNTVlVwQnk1MkhhYmxPUG15L25PY1lic2JOV05UTVJpSnBhMEFjUlJqMmg0Nkw0ZVBodnE1WHhDcmIKNUhlak5ocnNjcEc3YjFQMzY0YS9mNVNzOWcxd1dxaUZjbXc5Vklxb1o4VExRUUlJOVNBWEVrR3BsRmNMT2J2SgpYMDVsZStQaml2aSs5SndkSzFQLzMvWG1CODluT3h1bDI5QUQvZUxXa3IyQ0M4MGFJaEtXdDVTYks0ST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdlhoaHhwRlZaSDhud3F5aHh3SjB6eTJsZTZjdndIT2xyd3dQV2ZwSWl6TUxxK096CmdlcHhMaXh0S0lkM0Uza2pBQ3o3NnhjODRDbjBNVmNCS0ZiMkZWT1dpemRyb042SjFOT3VseWx2RlhoNlhhRlIKVTU1QjlFK1IyczIxSm1BN0xNUERKbXBOZnV3eFg5Z1orODkxdi9CSkFxcHVvYkpBbnZXWUFhWmxZazFHd0h3VwpRbk9rNWFRcEQwTnp5b0lrRWZmeUFOOGtLeFVIV2k3MGxMN1ZOMnU3YTd5WTN3WEtGSU9Bc05hWUhmQnQ2LzYrCkJ6OVNwT3lYaGpRTjhuQ1gyRGYvZU5IL3YwOHJWTENyM1lMRzVSc2ZWQUpQR0RNZmptSjd3Q2RMczJhcXgyTHEKY3hmbDBIb1JjajQxYnJHZGpiTWllaVBlYTBueFVZL05JRkJHeHdJREFRQUJBb0lCQUhTeHJDYk1aRGVkU1RQUgpkMkpHMVFLMUxuTFdLY2J5YzEwNHBFdmFwc3QxQ1A4NUl0b2xOc2dsZktXMXFWVkpDcEdWSXlOTUVLWlBzS0tpCjM0ZWs1N09DNC9taWpKdHI5S0FzTUIvUjJTVDBLd2wzemNzZWNhaXpTVFhsOUdoS1pLZlJlbVF5bk1CTFlLMlQKUDQyajNQWDJYRUZVRHdkdjdmVDVka0d0NWt1QUV3YU5MY053T3FVa2hTVElnb0tJVjZZbGF0SHJxYmhJNnpoZgpyU2VTMWNHS1hjVFFEMDcyRHBBZmdQRVJ4TG43VGp0QUtUY1dsR0RWdzkyR3FsWFFKREN1Tk5EQm5BOVlzb3pFCmtHVGlVZFdJWGpQMjY2RC9yMGJkZVZ5YUVGZzVVY0ozVjkyRE14MjhIRzZQVTR5aVRyTTV6NUhqQ3JmRzVlS3QKWkU1L3kwRUNnWUVBL0RJNDlZVmJQZ1JIQms1amE3dzRQRjlvL3Jxb1RONzJBL3pqUmFZZXBsa2xzYmwvQ2U0VwpvWkxCV1o1YkI2Uk0zWklrdDRSNkxqM0xZdkNDSDIyNlZpbXhxR3JWdWVOc254RXBUbDFkNnNpRitOYTFrdDNvCmRycGtwWHNtRkR5TzBVenNYNmFBc1NBNVpwbEU1L2htQXJqSVNpMEpQTGdtWmNTdWFBYWVjMDhDZ1lFQXdGUDIKYjFxTWgxR2FLTTd4eTFxQlB5ZU4ybkVzZmlBSnlFV0Jva0NYN2Y4Nk1lTGNpOGEyRitiUTRxWGl0REpNK2thNwp5RTk1bUtYaEhsY3JYK3Bac240N2FsMzcvUmdiUXVNT09HQlcyRnVpNXZBSmlQVUp5ZkdyTHRIdkdOckMrOGRnCkUyR1c3RHB4ZHI5dHU4cnd2SjBhSFlLWFNyRHI1bW1mTnBsejl3a0NnWUJDc3pHM1ZjYlU5eUtsdTFPMktiaWgKMXdZWTROc2tRWS9GYkR2YnJ0ektXQ2VOQXFkancvRitXQ2NGQWNuSGtwKzF0akk1eXpMWlNnU2hyVVJzOVlOagp5SEV4UHRnNTZybE90S1k5RUpxSFB2T1g1WWx1UjN4MDhrVXVNd3pXSzFJR2J4YlJFV05WOVZUWkdzNUxuN216CkhKWDBjRWJTSlU0YWVsTTZOZzN3SndLQmdEc1JqbjVrc1FSZWE1cGM5S1lnQmRIL3MvR0RFTWNyejlWU2c1M3gKZUxmL3l6L0hEVFZnc2t4azk0S2tzQnZuMXZ5Ry9PVm9nMC8rb2tWUFFHTVU5cmQ3VFlROW1VY0NRRjBxbnhOeApnenF2NmpoRFFLcHZsN0lPSnlVYUZQVHRPelZZNW9rTlQrejloaHVTYjRGZHN0STY3ZXBpVVZUL1FYUml2Q05vCnZkVUJBb0dBREErVWRuUkJ1VUlvbFpxSTdhKzV5ZUpxMjRpNElDT09QN2FKYTZJR0RUaGNzMFhJcG54NGNFMkUKTjA0ZEo5bytCK1EwMXhoQVFFNDB6WStXZVVydDJNMmZRY2xmUGlhSmphYzhjSHYwekoxM2orZG5yY2FHR0cwSworNVM5VmdvaW9OZDBVWmwzci9zNnJZcTViVGlqelVIYThYcXUyK3JueUh5ZE92WFc1Qnc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: webhook-server-tls
  namespace: default
type: kubernetes.io/tls
