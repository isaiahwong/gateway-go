##################################################
## Gateway Service
##################################################

apiVersion: v1
kind: Service
metadata:
  name: {{SERVICE_NAME}}
  namespace: {{NAMESPACE}}
spec:
  ports:
    - name: http
      port: 5000
      targetPort: gateway-port
    - name: https
      port: 443
      targetPort: webhook-port
    - name: admin
      port: 8080
      targetPort: admin-port
  selector:
    app: gateway
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-env-configmap
  namespace: {{NAMESPACE}}
data:
  APP_ENV: 'development'
  PORT: '5000'

  WEBHOOK_PORT: '8443'

  DISABLE_K8S_CLIENT: 'false'
  ENABLE_STACKDRIVER: 'false'

---
# Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  namespace: {{NAMESPACE}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccountName: api-gateway
      containers:
        - name: gateway
          image: registry.gitlab.com/isaiahwong/go/api/gateway
          imagePullPolicy: IfNotPresent
          ports:
            - name: gateway-port
              containerPort: 5000
            - name: webhook-port
              containerPort: 8443
            - name: admin-port
              containerPort: 8080

          envFrom:
            - configMapRef:
                name: gateway-env-configmap

          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /run/secrets/tls
              readOnly: true

          livenessProbe:
            httpGet:
              path: /hz
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 120

      volumes:
        - name: webhook-tls-certs
          secret:
            secretName: webhook-server-tls

      imagePullSecrets:
        - name: gitlab-auth

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway
  namespace: {{NAMESPACE}}
---
# Role
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: {{NAMESPACE}}
  name: api-gateway
rules:
  - apiGroups: ['', 'extensions', 'apps']
    resources: ['services', 'namespaces']
    verbs: ['get', 'list']

---
# Role Binding
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  namespace: {{NAMESPACE}}
  name: api-gateway-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-gateway
  namespace: {{NAMESPACE}}
subjects:
  - kind: ServiceAccount
    name: api-gateway
    namespace: {{NAMESPACE}}

---
##################################################
## Gateway Webhook
##################################################

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: gateway-webhook
  namespace: {{NAMESPACE}}
webhooks:
  - name: {{SERVICE_NAME}}.{{NAMESPACE}}.svc
    clientConfig:
      service:
        name: {{SERVICE_NAME}}
        namespace: {{NAMESPACE}}
        path: '/webhook'
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJBQ0NRRFdYZXhIZDBuMUVUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdG4KWVhSbGQyRjVMWE5sY25acFkyVXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1Ua3hNak14TVRNMU5qTTVXaGNOTWpBdwpNVE13TVRNMU5qTTVXakFtTVNRd0lnWURWUVFEREJ0bllYUmxkMkY1TFhObGNuWnBZMlV1WkdWbVlYVnNkQzV6CmRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNFdPcUlwZjkzQWJwSnBvYUMKL0JxL1UxdU9XWUtNVUZCK1BMUS91Z2ZTbnl2ZC96em8wMlFkYUZhNWpVdjVzRGc2cUExL0ozZTZvKzlQSVpHeQpOTUpzeTI1NjlIaGxmS29HKy9sTlVZR3ZrdFBxeTNGV2MvbjR5cTU0OFB2RXRzMUdISVFKMlFKVVlLaGtuaHk2ClMzVjVkVE9CMnZ6eWsvSHpnSUhBWWMrV3JUK2gxUDhkOXcrZFJxWkl6NGZwSmRwMmZLVk8zRk1uUkFsckhUYVQKdlVwd0srZ2NwdVdCbHd3aklLNjIvditEMHRNQy9pWHp2NUtDSWJJZjRnRW9rZElaSHIxUmxpVm8zVHpNUFZGQwo5K3JTdkF3ZnFYVDNsSThqZUlCQTBTN0V0clBtMzRjUVptN3FnUzR2VklFZ1BOcmdRSm40SngzNkJXeStHcS9NClJCdTVBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFCUm5BVEo2S1picVhjeC91Vk9uL2VLSGIvWjkKWjcvRHlqOFpua2RvRkhkejRMMlB3UDdrNFRaZWcwTW84WjMwN2paV3ZnNHA2VFRJNmRsQkRtcHFSYTdvNU9QWgpRNitLQmlWSVQxbWhuNnJYZ0x1WFNFRElLNGNYdzNsQUhyNjZZcFpmaHI3bllaamlkakVLOVJ2aFVjOGtLWjQ3CjNaMTVJVXgwQngxdWp1WW1DZksvNWhHdzcvSWpPMTlLdTE3RVF1aFlzWSt0bE1md2g3ZEJLaGlOYVY4cGJVL00KZ1R6dUQ2L0J0a25oSmJhTHk5V0lNbjRIejFEcW5BenBHRjhmbTUwMThOOFNvZ0pPc0UvYW9VWm5GWlh6K3pXbApDRGxBS2V2SGVnYndUc1I4ZzkyK3dlWVNHT0M2VHltdHdCUjlJZWxUVzU1N0tCc1YrU1lLY0FZQ2RzOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    rules:
      - operations: ['*']
        apiGroups: ['*']
        apiVersions: ['*']
        resources: ['services']

---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJBQ0NRRE5vek1wdWhkQmpEQU5CZ2txaGtpRzl3MEJBUVVGQURBbU1TUXdJZ1lEVlFRRERCdG4KWVhSbGQyRjVMWE5sY25acFkyVXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1Ua3hNak14TVRNMU5qTTVXaGNOTWpBdwpNVE13TVRNMU5qTTVXakFtTVNRd0lnWURWUVFEREJ0bllYUmxkMkY1TFhObGNuWnBZMlV1WkdWbVlYVnNkQzV6CmRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEU2RRWENUd3dBcU9xb29iakMKVnNGaEVsQ0RieUcrellxQkxxNUhqNk5yMHMxR0NHNzUxL3FpNVdWazYyYVJTWWJTM1ZpKzQ0TzhnS2p2ejAwOQp5MWZVbDh5VVptRVhjVWwwUFFPVnhzeVlFZGdIODRTN1BWbWlMeDNBRXF1MllLcFdHRS9STkdFZFd3eGVKUmY3CmpJaUdzdGV2L1V6RjArTXFnQmtOVWVZK1VCLzY5eXZ1djk2dVFnbFdZRWRJVXFiWnNQVlVJcnVSNU1INEtEZlgKVFVZL2EvTFJyMWdWN3RhQXRianJkTVJXOWlNYm5lQ0dhdFBYVFNWWmx0Rkl5UGlGekJIbXBDYWdHSVR3dmZxRwpiT1hhQXNHWS81ZXd0SWVUNk1wV21LaHo1dkVPeWFaV0R3R0xpN0pxamNOakdpT2lzVUJ0WVNtckVpUlR6bDlOCnUyNEhBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUZCUUFEZ2dFQkFGZ3ZPSm1CRlp5RVZETWhHc0U1OGZFVUhZZlgKaTJJOW1MQTVpTVRNL1I2ZXZVakFZMkwrYmtkRlVOcmgvWTJ3UjcrdWhmWUtvTTBrWCtleXRVd2dZa1Jpa0xzZQpjRzl4cWVVS2dSSXdZMmQzWHZHNG1SbmJvVmp6bjgzRUEzcy9iNGdPbmNNUFRxVDQ3WVJYSllhTkM1cEdGaUNJCnVzT2hGdWhSaVV4eVZOTU5iRkZaQVg2cGhseC9RNVJWaGU1YmlOd21lZGFjaGxaaVBUZUQvNEcxb0d6UnBNVU8KOEFPTUhzOHNBYXdTQm9teHcwOS9LRExQbG9JN0V3YUZYT1VWL3psajhNSEpFZHg2UmVNTDA2MmcrQ3BHVVNFdgp4VnpJcndMOStOV1pBT2ZmWWR3azFtSG1GVlhGNmpJTk53bEJ1UG1TbTdGMG5LdEdkYmNFaVYzcXFJaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMG5VRndrOE1BS2pxcUtHNHdsYkJZUkpRZzI4aHZzMktnUzZ1UjQramE5TE5SZ2h1CitkZjZvdVZsWk90bWtVbUcwdDFZdnVPRHZJQ283ODlOUGN0WDFKZk1sR1poRjNGSmREMERsY2JNbUJIWUIvT0UKdXoxWm9pOGR3QktydG1DcVZoaFAwVFJoSFZzTVhpVVgrNHlJaHJMWHIvMU14ZFBqS29BWkRWSG1QbEFmK3Zjcgo3ci9lcmtJSlZtQkhTRkttMmJEMVZDSzdrZVRCK0NnMzEwMUdQMnZ5MGE5WUZlN1dnTFc0NjNURVZ2WWpHNTNnCmhtclQxMDBsV1piUlNNajRoY3dSNXFRbW9CaUU4TDM2aG16bDJnTEJtUCtYc0xTSGsraktWcGlvYytieERzbW0KVmc4Qmk0dXlhbzNEWXhvam9yRkFiV0VwcXhJa1U4NWZUYnR1QndJREFRQUJBb0lCQUJ2NkFuSDZJQlpXWGh0YwpwRHJ4WFhPU0E3SDFLLzg1UTVnNHBHSk83ZUovZTFvNzlNU3h1VmUrTnVSYmhwNzVyenFJd2l0ZUF6MGp2VkZqCnRWanBseHRqc29abnRiQndGdHVrNEwwZ1dFSSszUUR4bGt0dHRHU2k3c21Cc2VIa3A4QWFLMEljUEd5eWxjcE8KRkFvVWZIR3JoSkNZazRRWXpySHZwV1RuNWp1U0hXSFNyOEJxN0RyaWVSS0NYeEF1cVB3cG9NSjhTYU9uS205awpQNG1TZGZPMHA4WUVuYVpweCtaZnkrMCtXQVpTMk5xYkZtQzVVMlQ2OGNrQTcraXVvOEJHcE83SzBtWnlYc050CkNaN3B6TjBJTWl2QTNHekQ3K2U0UEh0MjA5ZWpadTNubEtNRlI4UE9WNGxMV2E4QzdTaFBiRHVrQmRnbXJjSDAKdTUwYWRZRUNnWUVBOUxuSkF2eWU4T3pBUVVYOVVoMHpLUk9scFJrTkQyNlVBVWFZR3p2YXpXUEgrRGNoSkU4VApFUFo1Zk5YQWNtUWp1WFJmQUZmTG9zbWNqRHBZUUZqMzhuNDVoRVJyUnh1dFRONndPWmN2dnpxdjZwOHlmTGg2Cmp4TjN6dWUweGF4MWVNRjU0MHlQT1JENm96MmI0dGRnU1pDcGRXWkdtR0t6dlhSemlzTldaKzhDZ1lFQTNDY1YKcW1IeWUxWlpkNFZhcndwSGE1YnpxVFJhcWdZa1lROHBwakVpRnVKaGxhMDdsUUtWeEpoWlVSZjlDaHpSQnNLaQpTT281Qy9YKzZsZlJkbzk2SmtSakprWlFXSXVRNmRxeTNYOTU3TlBWR0s1OHRCTS84Z3dTMDlUUkdaanJoSHpYClU4VE16bzhTOVpBUUhWeVRMVEZsZEtvQlh0cDBVMWVrUHZvZEEya0NnWUVBdWl1YmYyb3VmNW1icUF4V2FlRk0KeWpMb0VIQytQcjhnV05nYlhweHFGMVdSQ29MbDgzazBSL000K0g2anFHSUZ5MDk3OWdiVUkwSzhsUEROc2lYOAplYjBNaEZLSVNkQUVSallpV2ExcDVWQUFBN3lYNjhscmN1eWNlQXBNdXhRM1NXWG1FOFJxTUQ5NmJEU3lJaDgyCllNQnNLYU5ra1FpRk05c2pDcTBQVG9FQ2dZQjdpUGNRVjh3QVI3RUdiMjgyZjdjWitXZWJFQVM4R1p3NlZvN1IKY2dxbCtydzFpRExCNStSd24raW1wNlpYRVZwOXg2UFc5SSswVllLSXIyU2JlZUZhTGMvUlAyMkFjamlMOFN1agpQUkFHdzh0MUFSeDYwNzV6TFRFM2F0azIydWQxdmJQNmpwazZZM0NKR1NEaHlQdlJSVUdnR0hHU2IxVU5HMFhRCkRQdFEyUUtCZ1FEcEp3K2pjMFpVY3VvMlpLMmxQZFhYVHNRT0M2Y2NybFRVdHdIVnl1YkU1TXlrN3V2VnQrRDMKQWVhSEpPWkwxMzg0TU1sYzFWcWFLbjUxWHRDNk5Eb0pDOFZ5NlVabWNtSXBobThwN2NFSnZRM3VwQ0xtRzlnWApJRnhzTkFhSGplUlh2c3VEcmRCV2tFRjBheE1EaG80Q3ZuUE1XVW52R3pjYUtSRmd3YktiK2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: webhook-server-tls
  namespace: {{NAMESPACE}}
type: kubernetes.io/tls
