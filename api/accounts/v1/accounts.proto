syntax = "proto3";

package api.accounts.v1;

option go_package = "accounts/v1;accounts";

import "google/api/annotations.proto";
import "accounts/v1/schema.proto";

service AccountsService {
  rpc LoginWithChallenge(Empty) returns (HydraResponse) {}

  rpc ConsentWithChallenge(Empty) returns (RedirectResponse) {}

  rpc Introspect(IntrospectRequest) returns (IntrospectResponse) {}

  rpc AccountExists(AccountExistsRequest) returns (AccountExistsResponse) {}

  rpc IsAuthenticated(Empty) returns (AuthenticateResponse) {
    option (google.api.http) = {
      post: "/v1/accounts",
    };
  }

  rpc SignUp(SignUpRequest) returns (RedirectResponse) {
    option (google.api.http) = {
      post: "/v1/accounts/signup",
    };
  }

  rpc Authenticate(AuthenticateRequest) returns (RedirectResponse) {
    option (google.api.http) = {
      post: "/v1/accounts/authenticate",
    };
  }

  rpc EmailExists(EmailExistsRequest) returns (EmailExistsResponse) {
    option (google.api.http) = {
      post: "/v1/accounts/email/exist",
    };
  }
}


message Empty {}

message Body {
  bytes payload = 1;
}

message HydraResponse {
  string challenge = 1;
  string request_url = 2;
  string session_id = 3;
  bool skip = 4;
  string subject = 5;
  string redirect_to = 6;
}

message IntrospectRequest {
  string token = 1;
  string scope = 2;
}

message IntrospectResponse {
  bool active = 1;
  repeated string aud = 2;
  string client_id = 3;
  int64 exp = 4;
  bytes ext = 5;
  int64 iat = 6;
  string iss = 7;
  int64 nbf = 8;
  string obfuscated_subject = 9;
  string scope = 10;
  string sub = 11;
  string token_type = 12;
  string username = 13;
}

message RedirectResponse {
  string redirect_to = 1;
}

message AccountExistsRequest {
  string id = 1;
}

message AccountExistsResponse {
  string id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string name = 5;
}

message AuthenticateResponse {
  bool status = 1;
}

message SignUpRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  string confirm_password = 5;
}

message AuthenticateRequest {
  string email = 1;
  string password = 2;
  string captcha_token = 3;
}

message EmailExistsRequest {
  string email = 1;
}

message EmailExistsResponse {
  bool exist = 1;
}