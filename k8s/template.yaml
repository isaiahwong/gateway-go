##################################################
## Gateway Service
##################################################

apiVersion: v1
kind: Service
metadata:
  name: {{SERVICE_NAME}}
  namespace: {{NAMESPACE}}
spec:
  ports:
    - name: http
      port: 5000
      targetPort: gateway-port
    - name: https
      port: 443
      targetPort: webhook-port
    # - name: admin
    #   port: 8080
    #   targetPort: admin-port
  selector:
    app: gateway
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-env-configmap
  namespace: {{NAMESPACE}}
data:
  APP_ENV: {{APP_ENV}}
  ADDRESS: ":5000"

  WEBHOOK_ADDRESS: ":8443"
  WEBHOOK_KEY_DIR: "/run/secrets/tls/tls.key"
  WEBHOOK_CERT_DIR: "/run/secrets/tls/tls.crt"

  ACCOUNTS_ADDRESS: "api-accounts-v1-accountsservice.default.svc.cluster.local:5000"
  ACCOUNTS_TIMEOUT: "10"

  DISABLE_K8S_CLIENT: "false"
  ENABLE_STACKDRIVER: "false"

  PROTO_MAP: "proto/map.json"

  # Redis
  REDIS_ADDR: 'redis-gateway.redis-gateway-service:6379'

---
# Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  namespace: {{NAMESPACE}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccountName: api-gateway
      containers:
        - name: gateway
          image: {{IMAGE}}
          imagePullPolicy: {{IMAGE_PULL_POLICY}}
          ports:
            - name: gateway-port
              containerPort: 5000
            - name: webhook-port
              containerPort: 8443
            # - name: admin-port
            #   containerPort: 8080

          envFrom:
            - configMapRef:
                name: gateway-env-configmap
            - secretRef:
                name: gateway-env-secrets
          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /run/secrets/tls
              readOnly: true

          livenessProbe:
            httpGet:
              path: /hz
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 120

      volumes:
        - name: webhook-tls-certs
          secret:
            secretName: webhook-server-tls

      imagePullSecrets:
        - name: gitlab-auth

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway
  namespace: {{NAMESPACE}}
---
# Role
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: {{NAMESPACE}}
  name: api-gateway
rules:
  - apiGroups: ['', 'extensions', 'apps']
    resources: ['services', 'namespaces']
    verbs: ['get', 'list']

---
# Role Binding
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  namespace: {{NAMESPACE}}
  name: api-gateway-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-gateway
subjects:
  - kind: ServiceAccount
    name: api-gateway
    namespace: {{NAMESPACE}}

---
##################################################
## Gateway Webhook
##################################################

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: gateway-webhook
  namespace: {{NAMESPACE}}
webhooks:
  - name: {{SERVICE_NAME}}.{{NAMESPACE}}.svc
    clientConfig:
      service:
        name: {{SERVICE_NAME}}
        namespace: {{NAMESPACE}}
        path: '/admission'
      caBundle: {{CA_CRT}}
    rules:
      - operations: ['*']
        apiGroups: ['*']
        apiVersions: ['*']
        resources: ['services']

---
apiVersion: v1
data:
  ca.crt: {{CA_CRT}}
  tls.crt: {{TLS_CRT}}
  tls.key: {{TLS_KEY}}
kind: Secret
metadata:
  name: webhook-server-tls
  namespace: {{NAMESPACE}}
type: Opaque
