##################################################
## Gateway Service
##################################################

apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: default
spec:
  ports:
    - name: http
      port: 5000
      targetPort: gateway-port
    - name: https
      port: 443
      targetPort: webhook-port
    # - name: admin
    #   port: 8080
    #   targetPort: admin-port
  selector:
    app: gateway
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-env-configmap
  namespace: default
data:
  APP_ENV: "development"
  ADDRESS: ":5000"

  WEBHOOK_ADDRESS: ":8443"
  WEBHOOK_KEY_DIR: "/run/secrets/tls/tls.key"
  WEBHOOK_CERT_DIR: "/run/secrets/tls/tls.crt"

  ACCOUNTS_DISABLE: "true"
  ACCOUNTS_ADDRESS: "api-accounts-v1-accountsservice.default.svc.cluster.local:5000"
  ACCOUNTS_TIMEOUT: "10"

  DISABLE_K8S_CLIENT: "false"
  ENABLE_STACKDRIVER: "false"

  PROTO_MAP: "proto/map.json"

  # Redis
  REDIS_ADDR: 'redis-gateway.redis-gateway-service:6379'

---
# Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccountName: api-gateway
      containers:
        - name: gateway
          image: registry.gitlab.com/eco_system/gateway
          imagePullPolicy: IfNotPresent
          ports:
            - name: gateway-port
              containerPort: 5000
            - name: webhook-port
              containerPort: 8443
            # - name: admin-port
            #   containerPort: 8080

          envFrom:
            - configMapRef:
                name: gateway-env-configmap
#            - secretRef:
#                name: gateway-env-secrets
          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /run/secrets/tls
              readOnly: true

          livenessProbe:
            httpGet:
              path: /hz
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 120

      volumes:
        - name: webhook-tls-certs
          secret:
            secretName: webhook-server-tls

      imagePullSecrets:
        - name: gitlab-auth

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway
  namespace: default
---
# Role
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: api-gateway
rules:
  - apiGroups: ['', 'extensions', 'apps']
    resources: ['services', 'namespaces']
    verbs: ['get', 'list']

---
# Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: default
  name: api-gateway-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-gateway
subjects:
  - kind: ServiceAccount
    name: api-gateway
    namespace: default

---
##################################################
## Gateway Webhook
##################################################

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: gateway-webhook
  namespace: default
webhooks:
  - name: gateway-service.default.svc
    clientConfig:
      service:
        name: gateway-service
        namespace: default
        path: '/admission'
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lVTzNxNHg3cW5ab0NQOG9nMVJnbVJJcTQxR1Vvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dqRVlNQllHQTFVRUNnd1BaMkYwWlhkaGVTMXpaWEoyYVdObE1CNFhEVEl4TURZeE1UQTVNVE0xTjFvWApEVE14TURZd09UQTVNVE0xTjFvd0dqRVlNQllHQTFVRUNnd1BaMkYwWlhkaGVTMXpaWEoyYVdObE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRaN0hLaUcwQ0VxdU5JZDZXTitmVDNFaTBiVWYKQ2Y2cUVhSkxLYmVGeUtKNGwyZ1dmaWdadWJlbFVYeGo3OHN3TFdxbnZodkNHY3h4N0ZxZWtNS0RQWW9uOHowcQoyRDNoTUU2aDJRZVVMQmphTWd4dnZuOHIrMFF5dExya0VDOWNVWWdTS2M0NWw3NXFsK3I2V1YybUVJVGFTN0RUCnV1eENaY2pzdlBKSkN2c29Sb1NVajJuWXhzcTFzRVJSa3JNSUsxdHNHL2taeDZPdWk0L2pYSWM1aUtvUWVqSlUKL3pMQzFtMEtDaWJLUVFtU3dVM3kxZXVaM1UwME9XYmVjWjg4S3J2aVhkY3lDUEZIM0g0VnplT3prVGN5YlMyRgo5ejBDUlluSklLYk9HSkZJaWNiL0ZVZ3llQVBJS0pTYUkwWFloOHpCdzlmYlpRS3VQS2gyUXg2ZVd3SURBUUFCCm8xTXdVVEFkQmdOVkhRNEVGZ1FVSzhhNGlPSUNIUk81WUJ6TE1mSWRNa2JwRUNBd0h3WURWUjBqQkJnd0ZvQVUKSzhhNGlPSUNIUk81WUJ6TE1mSWRNa2JwRUNBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFCQ21ESXA3RHpvMGZHcXlXWmN3NG82cXFTYVh6VU9LUG8xNnNWWDJRaENIVXRRa0Z2ZXJLCnVnbXdHRTlodktNekRSSG01VjIyYkM0N1ZDS0loSzVBOFdOS3Q3OTlMVi9CY1ZqWGs0QzRCdkoybkREREx4V0kKcTN4enZNeTVYaHhnWU1WbW45T0tOUmsza3AvSmozVTZRU01JSkZKclpDTkc3UlhFY2JxSEVDRmVORXZpRkN0QwpNMGpMNkVhSXoxeElzZHZXY1lsUktmek5nUzRHaUVMTFlTTTYreXNRUW5DK2x3Wkk3STN6U0FUR2Ivbm9OKy82CjdSa0dBSkdLMEZrT3QvcjRPbWk5NWlYaVMyMHVaMVFjc3cyWG1nd3l4RnZSc1FPZWJwRGQyN285bEhacGtRNkkKeGNjdVhjQXByZE5EaUVISFRxeWU2YVBCTXlid0xaYjcwQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    rules:
      - operations: ['*']
        apiGroups: ['*']
        apiVersions: ['*']
        resources: ['services']
    admissionReviewVersions: [ "v1", "v1beta1" ]
    sideEffects: None

---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lVTzNxNHg3cW5ab0NQOG9nMVJnbVJJcTQxR1Vvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dqRVlNQllHQTFVRUNnd1BaMkYwWlhkaGVTMXpaWEoyYVdObE1CNFhEVEl4TURZeE1UQTVNVE0xTjFvWApEVE14TURZd09UQTVNVE0xTjFvd0dqRVlNQllHQTFVRUNnd1BaMkYwWlhkaGVTMXpaWEoyYVdObE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRaN0hLaUcwQ0VxdU5JZDZXTitmVDNFaTBiVWYKQ2Y2cUVhSkxLYmVGeUtKNGwyZ1dmaWdadWJlbFVYeGo3OHN3TFdxbnZodkNHY3h4N0ZxZWtNS0RQWW9uOHowcQoyRDNoTUU2aDJRZVVMQmphTWd4dnZuOHIrMFF5dExya0VDOWNVWWdTS2M0NWw3NXFsK3I2V1YybUVJVGFTN0RUCnV1eENaY2pzdlBKSkN2c29Sb1NVajJuWXhzcTFzRVJSa3JNSUsxdHNHL2taeDZPdWk0L2pYSWM1aUtvUWVqSlUKL3pMQzFtMEtDaWJLUVFtU3dVM3kxZXVaM1UwME9XYmVjWjg4S3J2aVhkY3lDUEZIM0g0VnplT3prVGN5YlMyRgo5ejBDUlluSklLYk9HSkZJaWNiL0ZVZ3llQVBJS0pTYUkwWFloOHpCdzlmYlpRS3VQS2gyUXg2ZVd3SURBUUFCCm8xTXdVVEFkQmdOVkhRNEVGZ1FVSzhhNGlPSUNIUk81WUJ6TE1mSWRNa2JwRUNBd0h3WURWUjBqQkJnd0ZvQVUKSzhhNGlPSUNIUk81WUJ6TE1mSWRNa2JwRUNBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFCQ21ESXA3RHpvMGZHcXlXWmN3NG82cXFTYVh6VU9LUG8xNnNWWDJRaENIVXRRa0Z2ZXJLCnVnbXdHRTlodktNekRSSG01VjIyYkM0N1ZDS0loSzVBOFdOS3Q3OTlMVi9CY1ZqWGs0QzRCdkoybkREREx4V0kKcTN4enZNeTVYaHhnWU1WbW45T0tOUmsza3AvSmozVTZRU01JSkZKclpDTkc3UlhFY2JxSEVDRmVORXZpRkN0QwpNMGpMNkVhSXoxeElzZHZXY1lsUktmek5nUzRHaUVMTFlTTTYreXNRUW5DK2x3Wkk3STN6U0FUR2Ivbm9OKy82CjdSa0dBSkdLMEZrT3QvcjRPbWk5NWlYaVMyMHVaMVFjc3cyWG1nd3l4RnZSc1FPZWJwRGQyN285bEhacGtRNkkKeGNjdVhjQXByZE5EaUVISFRxeWU2YVBCTXlid0xaYjcwQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrRENDQWVDZ0F3SUJBZ0lVUzBQcnlPN1A5ZzFpbDlnYVNVZDV6bTVFdHJNd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dqRVlNQllHQTFVRUNnd1BaMkYwWlhkaGVTMXpaWEoyYVdObE1CNFhEVEl4TURZeE1UQTVNVE0xTjFvWApEVEl4TURjeE1UQTVNVE0xTjFvd0pqRWtNQ0lHQTFVRUF3d2JaMkYwWlhkaGVTMXpaWEoyYVdObExtUmxabUYxCmJIUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0MU51S2xOS1M0VlcKMlVNdXF0V1hWenRtVUJNUzFVdVExNTJxSXNwMzc4MWlJU1BqMjVKREVBazVzYW1yampPd2RpNnlHeWNkMUZvcgo0OGNldTNaU3JmTmdHOFp3VkpDbzNtK0Vrc0M1bnZYU3pIMFNvN0dUV0lxUStscDJFM1VQZTBlQzVNQjZqRDBlCmlWc0x5YjlXQ0F5MURMRlpxUVdZT1o1dTZzTGhjQTZId0tTM3gxMVR4L2JQaVpsL3Y5Tmp0Z3ZONDJVdDduN0oKVENRZ0V5V3Ayb3JnRXR5cm1CTFhXODRTdjh6cVRnbjFYNFBtaks1WUdGVmtmaE9HRTdzMnRZMk5aZFZBWk05egplSzZ6M3hCRkNEKzloTktQMGl1MkU4VXNnVFZkWUdQbHR5TlN1bXNWczNnY2FrRCtuT3JldkxMRHlONCsyM0ZoCmxxdXRWV0hmRlFJREFRQUJveW93S0RBbUJnTlZIUkVFSHpBZGdodG5ZWFJsZDJGNUxYTmxjblpwWTJVdVpHVm0KWVhWc2RDNXpkbU13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUNVYktiR0JJWTk3dmNjeU5rbWF6WHVCUkI5LwpqZi81cnM0eDdYZVJXNTZGa05EVEdXNGRsbVZRNTdvM2ZkUnNETEJOVUtpSlpWR1VBb2tTWGNEMFBpUkVyT2dzCnhhZ2RmUTlobkQ5NmZyMzlkS2xkSE9aOVYwQkI5SDZCOHRER1p1Q1ZoOW9xL3pmNHZDZWZ4VWNveCtHUGhkR2MKQ2hKNGlMZ21GZUptQVlBWHAwOW5rMEo1WUNRaXIzakszZW9FcjNic0lnQkNvSUdpYzh0YWtLUWhGdXo0R2xhbQplYzFLVDhld3lab0IzeWlOb3hTbmdVL1hJT1JXVzZJbkVYTlovWnR4OUt5TVBXcjk0RW9WSEZNR2RkeCtGUVQ1CmxnTVFaY1ova3NpVjVIVEp6MW0rblM3dTdpeCtaL3RZMkNDN2ZmbEwvMTcwdW5CWVE1d01LL29VL0kwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNDFOdUtsTktTNFZXMlVNdXF0V1hWenRtVUJNUzFVdVExNTJxSXNwMzc4MWlJU1BqCjI1SkRFQWs1c2FtcmpqT3dkaTZ5R3ljZDFGb3I0OGNldTNaU3JmTmdHOFp3VkpDbzNtK0Vrc0M1bnZYU3pIMFMKbzdHVFdJcVErbHAyRTNVUGUwZUM1TUI2akQwZWlWc0x5YjlXQ0F5MURMRlpxUVdZT1o1dTZzTGhjQTZId0tTMwp4MTFUeC9iUGlabC92OU5qdGd2TjQyVXQ3bjdKVENRZ0V5V3Ayb3JnRXR5cm1CTFhXODRTdjh6cVRnbjFYNFBtCmpLNVlHRlZrZmhPR0U3czJ0WTJOWmRWQVpNOXplSzZ6M3hCRkNEKzloTktQMGl1MkU4VXNnVFZkWUdQbHR5TlMKdW1zVnMzZ2Nha0Qrbk9yZXZMTER5TjQrMjNGaGxxdXRWV0hmRlFJREFRQUJBb0lCQVFEUXVoZEtONlhkQi9hQgprT1UxcU43SUV0dFRwTi9EQnhwY1VBRWE1c3NQWFlhL3BTT2Z4WUZjSlF4YmE4NEF5TWM3REk4dXpWRGZYVmcxClVleU85Z3JlZTd3QVpNbFpiR1lScjFXTUpmZUoxRzhVb2JiT3BNc0ZIbDRWOForL0o5bnFPUFFmcy9nUjhrQ3EKbi9XSDdlNUJmK0Z4WVJwUlRyakNGdzRDOHFOcWJjSUJlWERuWmkwUUxMQzA3Y2hIME81eWk4WU9yWFBxYWM5YQo2SGlIa21IVG0yRzhIMlJwa3ZpcDVSZy9UVG1rVlE5bU5xZFZNcWkxUnh5NEV2aThQTERlZ3F4dG1NcVRDelcyCm5mRGN2anJlQjVxcStHWnduQWhZdTdIOWszZTBzWk44d3NkZ3k1SjB0V0gwaVNGY1V2VlRCM1VHVVRsRmR6V3cKaVJPUklDSlZBb0dCQVBQakNlRG9WdjdlSGlqa0M4WlEyNmwrcjFOS2diL25OWFhQQjJDY0cwSzJiQ21hU2VMSAowRG1xMmNBd3Ftd1BnejZIN09ISU9xU004SUxhdUFmT093M24xdktDOFpSVVhJMHZ3YnVZa3drK2lMRDdSRHJsCjhjcWRtcHdkbWZ0SlRuU2FXV1F0dnRsVm1qMGZrclN0Z2t3UkNZUFZydXhNL1B3SHE3cW1UeVdiQW9HQkFPNmQKMHJhUnZMNXE1bmdrQ081WWExR1pCbnNTWUFXUTB0SUxyRms1K3NtL0VEMERsdGhQMmpDZ0dJVjQ3eHN2aTBOZgpOUG9XLzFPVjhnVkw2SDR4cTNJdUh2bWFHUm5DMFdyZGhSWlpuSmZsVXJzSUpDS2JpK1pHMGdpNVVNaVdXM0hrCjBIdVkxT2ppV0ZEQyszeXRsTHZQTFRaZytrcG9HS0xOMGJWQVpERVBBb0dCQUk4a1pVcms4eEo1eVpmVWFQakgKd25WVHpwR0RQRzRteE9EVlZ3NGo4WGdSVzZCN1Z2eE1ySEQ4VHZ1WFZKOUI1NVVPOEVDQVpiTG9xYzBUbEVtNAppRDZjSVRPTEdVRW0xbjlqVlVER3h4MzQzditKS2oycmNtT3FadkZVQ21sTFdFbmx3YXVqa2MwN2llQndKSW41CkFHMm0zai9MYmZSeEoxYkJKZERTQmNnYkFvR0JBTHFZUGp1NGthRlNWVEdqOUR2MmRzM1RYWWNHWW9KWHN4VEEKUGlGMFBwSmZUK0oybVJKRXQzb0k1OFFRUXVLK2RpZlVIc2huRFhrZXE2aktxRjl1bGdSdTNwZ1BrZ3RjRm9sNwordVAwWllrK3NraEI0SWdUblA0UmFaT2EzdnBNNGV1WnBCTFMrOE8xcEp4YkxYQmRDUThvdnRGa1dyV3UyMzBNCmVDNUYwVk92QW9HQU5lZHpqRlRaaEF0SVVhSmVwNVlvbTVmTnFrcHBxc0haUWs4MURkUXZKZUNlVE1EWUFSTHMKM3U2TUxkalpxR0NvcFlEZDNvME1MbHBCcTE1cjkzYmtEZXNRSEN1V3htTkV6cTQ2MW50YTNwZVEvU2tyeWlpNQppNis3bStJVWxaVFBTZjMrQlpVWmx3TERpOWpkbzBRVHNXaUlTU1Ard1IrenpkV0FDYks5eXM0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: webhook-server-tls
  namespace: default
type: Opaque
