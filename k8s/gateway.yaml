##################################################
## Gateway Service
##################################################

apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: default
spec:
  ports:
    - name: http
      port: 5000
      targetPort: gateway-port
    - name: https
      port: 443
      targetPort: webhook-port
    # - name: admin
    #   port: 8080
    #   targetPort: admin-port
  selector:
    app: gateway
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-env-configmap
  namespace: default
data:
  APP_ENV: 'development'
  PORT: '5000'

  WEBHOOK_PORT: '8443'

  DISABLE_K8S_CLIENT: 'false'
  ENABLE_STACKDRIVER: 'false'

---
# Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccountName: api-gateway
      containers:
        - name: gateway
          image: registry.gitlab.com/isaiahwong/go/api/gateway
          imagePullPolicy: IfNotPresent
          ports:
            - name: gateway-port
              containerPort: 5000
            - name: webhook-port
              containerPort: 8443
            # - name: admin-port
            #   containerPort: 8080

          envFrom:
            - configMapRef:
                name: gateway-env-configmap

          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /run/secrets/tls
              readOnly: true

          livenessProbe:
            httpGet:
              path: /hz
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 120

      volumes:
        - name: webhook-tls-certs
          secret:
            secretName: webhook-server-tls

      imagePullSecrets:
        - name: gitlab-auth

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway
  namespace: default
---
# Role
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: api-gateway
rules:
  - apiGroups: ['', 'extensions', 'apps']
    resources: ['services', 'namespaces']
    verbs: ['get', 'list']

---
# Role Binding
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  namespace: default
  name: api-gateway-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-gateway
subjects:
  - kind: ServiceAccount
    name: api-gateway
    namespace: default

---
##################################################
## Gateway Webhook
##################################################

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: gateway-webhook
  namespace: default
webhooks:
  - name: gateway-service.default.svc
    clientConfig:
      service:
        name: gateway-service
        namespace: default
        path: '/webhook'
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJBQ0NRRCsxZmJVQzI0SmdqQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdG4KWVhSbGQyRjVMWE5sY25acFkyVXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1qQXdNakE0TURVME9EVTNXaGNOTWpBdwpNekE1TURVME9EVTNXakFtTVNRd0lnWURWUVFEREJ0bllYUmxkMkY1TFhObGNuWnBZMlV1WkdWbVlYVnNkQzV6CmRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNXpsV2FVSzZPaDRtWlZBQWkKczNDd3A4S21sOFpHWC9rV2plOXhNMC9QQmhuY2NDeWxoLzYxUTNMUEkyMjRadjFrZCtnSzFPV09WTFY5RFNSQwpYQXo1L1plUWVLenErcU4wSko0dmVBWGk1aVRnWk90Z0FjaWpUUzl4NzZDcHkvVUVQa3ZrUkRLREkvSmVRcC9UCnBaZ1FHL0NEOHNuRlF1cUtUS1JrUjJnN2lNenhRb08zNGpETHVWYWZBZXh2cTBQZDkzRVNVQ2dZYUJyN0ozZ1cKTHZHWW9HR2wrN2p0OEVSdS84SHhuRnNyTENaTWt5Yldkako2bkRhMHV3d3J4Z25FaHYxU0xjVHJkOXBXYjdWRQpPdFpIZ05iR2tHbXgwRDlnSlF2Nko0SFI4RHpzSFMvUkFkQzdwWU4rNkxuN1pkNmhTa3l1NkF3MUVLODlZWDVUCmJjblhBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKclZPcHRxQXQybUFhVENYSGN4WFhqRFMvMUoKelVUbjc0eXpraGY3c3pqcnI0VUwwSEdZa0ZqMHFaSC9LdXhYTWNzUjU3TWJpTFJXTWFrU1NqNVVOTE5oWWFhVQpLb2tRVEJKZjc0YTNNa2dRaTlyMXB1ZG96cmJOT0k0QUtsRHExbGUrRVhRbDQ2WWxxWmVYaS9tSThhZGovOTZ2CjVlN3lsT3lod2xRRUpyU3YxZ3ZwVkJic2ZiS1BNZGlMSUtGYk1aNTNvVnJSd3ZIRkc2NnNBN0x3VWxienFqVjUKaWR4K2doQjhTQ2xJYjdIS0k4OStaUEdRWE4wSzBuQ0VvUzRvNmdJS3U2QTdVUnhVV3BBT2JOYWxiMXdMVG5CTgo2ZXI1QlpTTFlNWVd6ZWpVN1VOdUdIemdnT0xrWUlQZ1h1ZlVBczJDTTV5S2xwazN4NE9Uc3o5SkZlWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    rules:
      - operations: ['*']
        apiGroups: ['*']
        apiVersions: ['*']
        resources: ['services']

---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJBQ0NRRGRsMTFwTGR4R2hEQU5CZ2txaGtpRzl3MEJBUVVGQURBbU1TUXdJZ1lEVlFRRERCdG4KWVhSbGQyRjVMWE5sY25acFkyVXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1qQXdNakE0TURVME9EVTNXaGNOTWpBdwpNekE1TURVME9EVTNXakFtTVNRd0lnWURWUVFEREJ0bllYUmxkMkY1TFhObGNuWnBZMlV1WkdWbVlYVnNkQzV6CmRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeWh0Zis2alNkaGN1dWhVWVUKdU5KNGFqUGtKMkpRMlJFcnFPNkIxRVY1ZTdpSFMrRnN1ZXRjSVN6UTg1T0UvOC9jTmVDSFN1dXdpaGw0WkJSbQpvangrUmdPYVhib2tnVjdCdjQ2S05SZUJpeVY3S3lJeUpBRzhJYjhlNVpWb2laOU9aa2NZZ21obGdaZ05TdEpkCkxXT2JOVTZQelRvbVZPRkZrcy8xR0V4SllTTHBsVFZncDYzOEtXZkhJNmkyU2FEanNucEsyOWRwSVU3UzMyTTAKSW94UHZaSDlVS1JXSDZGTE5FUGhlMVdZbHRxalR4aWpEejZMMHU3emlJTWl0bnRWREpDUlhEODQ1Wmh4Sk1LdAphT2hVVVBOS21NcGowb21LdDg5S3JnUklGKzVnSnZiSzN2bnNQS0NzRk10MUpEMFA4RGQ3OTRta2YzbjFucXd1Cm1MZ0JBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUZCUUFEZ2dFQkFDcHVPTWY4cFEwWEs4akhYM0p6U0RnMnVUc1IKZ25oZXR5SjVZNHZvSDI5RlBtY0t2a00xM0k0Y2hEQ25ZSFAzSUZoMUhSbGw2N29iM09NSExFbU9IRzRpdGN1VQpqUFJ5bG91QUlJaXIvSEErWDBTR1RKaUZPSzg3NGNRRFdCNW1IbHZTSkI0VWMvTlVaaHlMcWJHdWd0NTZUV0g3CmF0cWdhTnFvUEEvUDRlSk9KREdkOCt2aEZnL3dWMjdicUlidy9ONmxZcEFhQnFUS2pRK1JKbmtKZnJoRmFYN0wKemtzWEJJU0xsN2V4cEZVcmJRRVY3b2hmQ25LTWRSYkV1L0tTUU9FTXhiemRtaHpQbGVLNkhKaklUUllpVklYRAp4clhsUlZmbVAzbmMvM1BtaEJVZmhxTEpWd3oyMWxDTTh2ZjJlYk9PNHBLWUtGMmVJQ2dTL1ZUUk1BMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc29iWC91bzBuWVhMcm9WR0ZMalNlR296NUNkaVVOa1JLNmp1Z2RSRmVYdTRoMHZoCmJMbnJYQ0VzMFBPVGhQL1AzRFhnaDBycnNJb1plR1FVWnFJOGZrWURtbDI2SklGZXdiK09palVYZ1lzbGV5c2kKTWlRQnZDRy9IdVdWYUltZlRtWkhHSUpvWllHWURVclNYUzFqbXpWT2o4MDZKbFRoUlpMUDlSaE1TV0VpNlpVMQpZS2V0L0Nsbnh5T290a21nNDdKNlN0dlhhU0ZPMHQ5ak5DS01UNzJSL1ZDa1ZoK2hTelJENFh0Vm1KYmFvMDhZCm93OCtpOUx1ODRpRElyWjdWUXlRa1Z3L09PV1ljU1RDcldqb1ZGRHpTcGpLWTlLSmlyZlBTcTRFU0JmdVlDYjIKeXQ3NTdEeWdyQlRMZFNROUQvQTNlL2VKcEg5NTlaNnNMcGk0QVFJREFRQUJBb0lCQUZJM0FSKzI4ZFlkT0tpOQpYWUhMZjduT2h1a3FMZiszaDAzSTlWVzYwT2ZhVHllWGpVL0o2eGE1Zkc4WnpUVHhyZUxtdU9qMVdzY3BRZ09NCmEweThxQWtxNnh2YTBBOWh1S2FYTmVoMS9NWStzMXNlaVJmNE53aFJyamRuV1VBVUtOWXRDYzdDdDVzUGJGdXEKdW1nSXNCZFpIRDNqTUVWWXo0bC95OTgrZWx0TDZDTkQwcnBZbElkay9INXpueEFtKzUza0lUNk14SFNLZU16Tgp1cFZEamFuOTl2Sm5zb3NFVlNQUzZFQW1EOUhRaHpIcFY5YVZSV29DbkhEYU5UWHZ4Smh1dm1RZ2txbmRQUW5xCkpGR2xFcHR3bHM5SDh4dm5qVHpPYmdvNjNoVy9mQUNLdHVISlU5USsvbEdMSm1ER1hpOWxyV3pLdGdvMVZUN2QKQnIvekhKVUNnWUVBNWJkVWwyUFptK2xzeDBRQ0VndE1ya2tseDFVTS9CcEhpT1VWeFJuTGtic3B0aWdhdlZqZApaNC9vaWI1TTd4MmF6eHIvN1ZleEZPMHBaL1VLVGJEdmcrb2M4all4MU1Hd2RHL0hhRzRPYjduclY4TGwyL1A4CmUwVXRHNk5RVTl1NWtiVEI0NWV4Qm8ybXlJb3FTemFxMjFEdmp6VFcvajNxeFlsR1JoL0xKdzhDZ1lFQXh2UWMKeWQ5dHV6ZFRFVWRmbU9SbEdoK0d5MWxmR3F6enpWQ0J4VHNzVEJiYnNkTjVoKzZpOGp2ejZTTDNiNnJxRGVkYgpFbHVFVlJKTW5DVUo5ZE80aXRQUzBJMzdpNVd6cHlFMGhIY0pFdjJ5STlLT1dETytNYmxaL1hPUTgrQnZBWS83Cm53aFRhMnZMSmx2ZTRZMVBPZEJvdkNPYVNsV3l2cWFxazd3RXIrOENnWUFEeXVVUW9zdGk4WldrTEpGRUx2K1QKR1E0UW5temFkS3lkcS9xU0NIejk2UE1sV01Bb1JDRlRwbUtXYzVmZGtzV05pY3FUNXBDNzRiWi9TdUppcWZzcQpXR0VsOXBNWUNpS1pxWWJIU0puZ2FsZGlXWXRsK0Q5QTRjRis1VkZjTVJKOVAxaThJekwvQXJPd04rZSsyaVl6Ci9NQVh3eTJSZ1FBeFJyVHNUM1lSTFFLQmdRQ3JHb2lqeVVjTEN2S2kycHBKMkt0bXd4UmZVSlp0VDY5QnRXcFYKNEtVaEwwdDBiU2FKRkdBSktpeUVKYkZkMVVVRC9pUWg3cGtwdk5vc00rS1VDNmticEQ4YlkvQ2hSSGRFVmxkZgpVU3g1cTd3SCtPNjR4bzlkSGtaWnBvbFVaSUd6ZTB2d291MXpaanBKM0JzY0tqYW54eWc4SGZaMDFhMHJNQlZsCmh2OFUrd0tCZ1FDaDc4OURoazd2byswV1RPSEh6b0ttaEVaOWVtakZ3WU5aMVRnMytYMlVCNEEyVVJtNkpUa28KckE4RGhWbUx4dWZNTUZhOCtuZGpRNVA5M3BSMUpwcFFvcDR2MlNkRWs1MnE0cWVTd2NUMjZVYmRubmxCWTNSaQp0a3VxK0FLL29GTVc5dTd6cUhKZzhPWGc0KzZUMTdXbUI4eG9wazBJaGh6QkZVeUdoVXJxeGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: webhook-server-tls
  namespace: default
type: kubernetes.io/tls
